{"list":[{"title":"CanvasRecorder","link":"<a href=\"CanvasRecorder.html\">CanvasRecorder</a>","description":"<p>Records video from a Canvas to a file.</p>"},{"title":"CanvasRecorder#getPNG","link":"<a href=\"CanvasRecorder.html#getPNG\">getPNG</a>","description":"<p>Retrieves the current frame as a PNG and downloads the image.</p>"},{"title":"CanvasRecorder#start","link":"<a href=\"CanvasRecorder.html#start\">start</a>","description":"<p>Starts the video recording.</p>"},{"title":"CanvasRecorder#stop","link":"<a href=\"CanvasRecorder.html#stop\">stop</a>","description":"<p>Stops the video recording and downloads the video.</p>"},{"title":"Clock#delta","link":"<a href=\"Clock.html#delta\">delta</a>","description":"<p>Gets the last delta value, it does not calculate the delta, use <code>getDelta()</code></p>"},{"title":"Clock#getDelta","link":"<a href=\"Clock.html#getDelta\">getDelta</a>","description":"<p>Calculate time since last frame\nIt also calculates <code>time</code></p>"},{"title":"Clock#time","link":"<a href=\"Clock.html#time\">time</a>","description":"<p>Gets the current time, it does not calculate the time, it's calcualted\nwhen <code>getDelta()</code> is called.</p>"},{"title":"LayersArray#shaderType","link":"<a href=\"LayersArray.html#shaderType\">shaderType</a>"},{"title":"Points","link":"<a href=\"Points.html\">Points</a>","description":"<p>Main class Points</p>"},{"title":"Points#addEventListener","link":"<a href=\"Points.html#addEventListener\">addEventListener</a>","description":"<p>Listen for an event dispatched from WGSL code</p>"},{"title":"Points#init","link":"<a href=\"Points.html#init\">init</a>","description":"<p>One time function to call to initialize the shaders.</p>"},{"title":"Points#setAudio","link":"<a href=\"Points.html#setAudio\">setAudio</a>","description":"<p>Assigns an audio FrequencyData to a StorageMap.<br>\nCalling setAudio creates a Storage with <code>name</code> in the wgsl shaders.<br>\nFrom this storage you can read the audio data sent to the shader as numeric values.<br>\nValues in <code>audio.data</code> are composed of integers on a scale from 0..255</p>"},{"title":"Points#setBindingTexture","link":"<a href=\"Points.html#setBindingTexture\">setBindingTexture</a>","description":"<p>Special texture where data can be written to it in the Compute Shader and\nIs a one way communication method.\nIdeal to store data to it in the Compute Shader and later visualize it in\nthe Fragment Shader.</p>"},{"title":"Points#setLayers","link":"<a href=\"Points.html#setLayers\">setLayers</a>","description":"<p>Layers of data made of <code>vec4f</code>.\nThis creates a storage array named <code>layers</code> of the size\nof the screen in pixels;</p>"},{"title":"Points#setMeshDensity","link":"<a href=\"Points.html#setMeshDensity\">setMeshDensity</a>","description":"<p>Establishes the density of the base mesh, by default 1x1, meaning two triangles.\nThe final number of triangles is <code>numColumns</code> * <code>numRows</code> * <code>2</code> ( 2 being the triangles )</p>"},{"title":"Points#setSampler","link":"<a href=\"Points.html#setSampler\">setSampler</a>","description":"<p>Creates a <code>sampler</code> to be sent to the shaders. Internally it will be a {@link GPUSampler}</p>"},{"title":"Points#setStorage","link":"<a href=\"Points.html#setStorage\">setStorage</a>","description":"<p>Creates a persistent memory buffer across every frame call. See <a href=\"https://www.w3.org/TR/webgpu/#gpubuffer\">GPUBuffer</a>\n<br>\nMeaning it can be updated in the shaders across the execution of every frame.\n<br>\nIt can have almost any type, like <code>f32</code> or <code>vec2f</code> or even array<f32>.</p>"},{"title":"Points#setStorageMap","link":"<a href=\"Points.html#setStorageMap\">setStorageMap</a>","description":"<p>Creates a persistent memory buffer across every frame call that can be updated.</p>"},{"title":"Points#setTexture2d","link":"<a href=\"Points.html#setTexture2d\">setTexture2d</a>","description":"<p>Create a <code>texture_2d</code> in the shaders.</p>"},{"title":"Points#setTextureImage","link":"<a href=\"Points.html#setTextureImage\">setTextureImage</a>","description":"<p>Load an image as texture_2d</p>"},{"title":"Points#setTextureImageArray","link":"<a href=\"Points.html#setTextureImageArray\">setTextureImageArray</a>","description":"<p>Load images as texture_2d_array</p>"},{"title":"Points#setTextureString","link":"<a href=\"Points.html#setTextureString\">setTextureString</a>","description":"<p>Loads a text string as a texture.\nUsing an Atlas or a Spritesheet with UTF-16 chars (<code>path</code>) it will create a new texture\nthat contains only the <code>text</code> characters.\nCharacters in the atlas <code>path</code> must be in order of the UTF-16 chars.\nIt can have missing characters at the end or at the start, so the <code>offset</code> is added to take account for those chars.\nFor example, <code>A</code> is 65, but if one character is removed before the letter <code>A</code>, then offset is -1</p>"},{"title":"Points#setTextureVideo","link":"<a href=\"Points.html#setTextureVideo\">setTextureVideo</a>","description":"<p>Load an video as texture2d</p>"},{"title":"Points#setTextureWebcam","link":"<a href=\"Points.html#setTextureWebcam\">setTextureWebcam</a>","description":"<p>Load webcam as texture2d</p>"},{"title":"Points#setUniform","link":"<a href=\"Points.html#setUniform\">setUniform</a>","description":"<p>Set a param as uniform to send to all shaders.\nA Uniform is a value that can only be changed\nfrom the outside, and unless changed it remains\nconsistent.</p>"},{"title":"Points#updateUniforms","link":"<a href=\"Points.html#updateUniforms\">updateUniforms</a>","description":"<p>Update a list of uniforms</p>"},{"title":"RGBAColor#euclideanDistance","link":"<a href=\"RGBAColor.html#euclideanDistance\">euclideanDistance</a>","description":"<p>Checks how close two colors are. Closest is <code>0</code>.</p>"},{"title":"RenderPass","link":"<a href=\"RenderPass.html\">RenderPass</a>","description":"<p>A collection of Vertex, Compute and Fragment shaders that represent a RenderPass.\nThis is useful for PostProcessing.</p>"},{"title":"RenderPasses","link":"<a href=\"RenderPasses.html\">RenderPasses</a>"},{"title":"RenderPasses.add","link":"<a href=\"RenderPasses.html#.add\">add</a>","description":"<p>Add a <code>RenderPass</code> from the <code>RenderPasses</code> list</p>"},{"title":"RenderPasses.bloom","link":"<a href=\"RenderPasses.html#.bloom\">bloom</a>","description":"<p>Bloom postprocessing. Increases brightness of already bright areas to create a haze effect.</p>"},{"title":"RenderPasses.blur","link":"<a href=\"RenderPasses.html#.blur\">blur</a>","description":"<p>Blur postprocessing. Softens an image by creating multiple samples.</p>"},{"title":"RenderPasses.chromaticAberration","link":"<a href=\"RenderPasses.html#.chromaticAberration\">chromaticAberration</a>","description":"<p>Chromatic Aberration postprocessing. Color bleeds simulating a lens effect without distortion.</p>"},{"title":"RenderPasses.color","link":"<a href=\"RenderPasses.html#.color\">color</a>","description":"<p>Color postprocessing</p>"},{"title":"RenderPasses.filmgrain","link":"<a href=\"RenderPasses.html#.filmgrain\">filmgrain</a>","description":"<p>Film grain postprocessing. White noise added to the output to simulate film irregularities.</p>"},{"title":"RenderPasses.grayscale","link":"<a href=\"RenderPasses.html#.grayscale\">grayscale</a>","description":"<p>Grayscale postprocessing. Takes the brightness of an image and returns it; that makes the grayscale result.</p>"},{"title":"RenderPasses.lensDistortion","link":"<a href=\"RenderPasses.html#.lensDistortion\">lensDistortion</a>","description":"<p>Lens Distortion postprocessing. A fisheye distortion with chromatic aberration.</p>"},{"title":"RenderPasses.pixelate","link":"<a href=\"RenderPasses.html#.pixelate\">pixelate</a>","description":"<p>Pixelate postprocessing. It reduces the amount of pixels in the output preserving the scale.</p>"},{"title":"RenderPasses.waves","link":"<a href=\"RenderPasses.html#.waves\">waves</a>","description":"<p>Waves postprocessing. Distorts the image with noise to create a water like effect.</p>"},{"title":"ShaderType","link":"<a href=\"ShaderType.html\">ShaderType</a>","description":"<p>In different calls to the main {@link Points} class, it is used to\ntell the library in what stage of the shaders the data to be sent.</p>"},{"title":"UniformKeys#DELTA","link":"<a href=\"UniformKeys.html#DELTA\">DELTA</a>","description":"<p>To set the time after the last frame</p>"},{"title":"UniformKeys#EPOCH","link":"<a href=\"UniformKeys.html#EPOCH\">EPOCH</a>","description":"<p>To set the current date and time in seconds</p>"},{"title":"UniformKeys#MOUSE","link":"<a href=\"UniformKeys.html#MOUSE\">MOUSE</a>","description":"<p>To set mouse coordinates</p>"},{"title":"UniformKeys#MOUSE_CLICK","link":"<a href=\"UniformKeys.html#MOUSE_CLICK\">MOUSE_CLICK</a>","description":"<p>To set if the mouse has been clicked.</p>"},{"title":"UniformKeys#MOUSE_DELTA","link":"<a href=\"UniformKeys.html#MOUSE_DELTA\">MOUSE_DELTA</a>","description":"<p>To set how much the wheel has moved.</p>"},{"title":"UniformKeys#MOUSE_DOWN","link":"<a href=\"UniformKeys.html#MOUSE_DOWN\">MOUSE_DOWN</a>","description":"<p>To set if the mouse is down.</p>"},{"title":"UniformKeys#MOUSE_WHEEL","link":"<a href=\"UniformKeys.html#MOUSE_WHEEL\">MOUSE_WHEEL</a>","description":"<p>To set if the wheel is moving.</p>"},{"title":"UniformKeys#SCREEN","link":"<a href=\"UniformKeys.html#SCREEN\">SCREEN</a>","description":"<p>To set screen dimensions</p>"},{"title":"UniformKeys#TIME","link":"<a href=\"UniformKeys.html#TIME\">TIME</a>","description":"<p>To set the time in milliseconds</p>"},{"title":"UniformsArray#buffer","link":"<a href=\"UniformsArray.html#buffer\">buffer</a>","description":"<p>set buffer</p>"},{"title":"module:data-size.isArray","link":"<a href=\"module-data-size.html#.isArray\">isArray</a>","description":"<p>Check if string has 'array' in it</p>"},{"title":"module:defaultFunctions","link":"<a href=\"module-defaultFunctions.html\">defaultFunctions</a>","description":"<p>The defaultFunctions are functions already incorporated onto the shaders you create,\nso you can call them without import.\n<br>\n<br>\nThese are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>\n<p>Use the base example as reference: examples/base/vert.js</p>"},{"title":"module:defaultFunctions.defaultVertexBody","link":"<a href=\"module-defaultFunctions.html#.defaultVertexBody\">defaultVertexBody</a>","description":"<p>The defaultVertexBody is used as a drop-in replacement of the vertex shader content.\n<br>\nThis is not required, but useful if you plan to use the default parameters of the library.\n<br>\nAll the examples in the examples directory use this function in their vert.js file.\n<br>\n<br>\nDefault function for the Vertex shader that takes charge of automating the\ncreation of a few variables that are commonly used.</p>"},{"title":"module:defaultStructs","link":"<a href=\"module-defaultStructs.html\">defaultStructs</a>","description":"<p>The defaultStructs are structs already incorporated onto the shaders you create,\nso you can call them without import.\n<br>\nFragment, Sound, and Event structs.\n<br>\n<br>\nFragment used in Vertex Shaders.<br>\nSound used along with {@link Points#setAudio}<br>\nEvent used along with {@link Points#addEventListener}<br></p>"},{"title":"module:defaultVertexStructs~defaultVertexStructs","link":"<a href=\"module-defaultVertexStructs.html#~defaultVertexStructs\">defaultVertexStructs</a>","description":"<p>Unused structs for the future.</p>"},{"title":"module:points/animation","link":"<a href=\"module-points_animation.html\">points/animation</a>","description":"<p>Utilities for animation.\n<br>\nFunctions that use sine and <code>params.time</code> to increase and decrease a value over time.\n<br>\n<br>\nThese are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/animation.fnusin","link":"<a href=\"module-points_animation.html#.fnusin\">fnusin</a>","description":"<p>Animates <code>sin()</code> over <code>params.time</code> and a provided <code>speed</code>.\nThe value is normalized, so in the range 0..1</p>"},{"title":"module:points/animation.fucos","link":"<a href=\"module-points_animation.html#.fucos\">fucos</a>","description":"<p>Animates <code>cos()</code> over <code>params.time</code> and a provided <code>speed</code>.\nThe value is not normalized, so in the range -1..1</p>"},{"title":"module:points/animation.fusin","link":"<a href=\"module-points_animation.html#.fusin\">fusin</a>","description":"<p>Animates <code>sin()</code> over <code>params.time</code> and a provided <code>speed</code>.\nThe value is not normalized, so in the range -1..1</p>"},{"title":"module:points/audio","link":"<a href=\"module-points_audio.html\">points/audio</a>","description":"<p>Utilities for audio work.\n<br>\n<br>\nThese are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/audio.audioAverage","link":"<a href=\"module-points_audio.html#.audioAverage\">audioAverage</a>","description":"<p>Average of all the value in sound.data (Sound struct in {@link module:defaultStructs})</p>"},{"title":"module:points/audio.audioAverageSegments","link":"<a href=\"module-points_audio.html#.audioAverageSegments\">audioAverageSegments</a>","description":"<p>WIP</p>"},{"title":"module:points/cellular2d","link":"<a href=\"module-points_cellular2d.html\">points/cellular2d</a>","description":"<p>original: Author :  Stefan Gustavson (stefan.gustavson@liu.se)<br>\nhttps://github.com/ashima/webgl-noise/blob/master/src/cellular2D.glsl<br>\n<br>\nThese are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/cellular2d.cellular","link":"<a href=\"module-points_cellular2d.html#.cellular\">cellular</a>","description":"<p>Cellular noise</p>"},{"title":"module:points/classicnoise2d","link":"<a href=\"module-points_classicnoise2d.html\">points/classicnoise2d</a>","description":"<p>original: Author :  Stefan Gustavson (stefan.gustavson@liu.se)<br>\nhttps://github.com/ashima/webgl-noise/blob/master/src/classicnoise2D.glsl<br>\n<br>\nThese are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/classicnoise2d.cnoise","link":"<a href=\"module-points_classicnoise2d.html#.cnoise\">cnoise</a>","description":"<p>Classic Perlin Noise</p>"},{"title":"module:points/classicnoise2d.pnoise","link":"<a href=\"module-points_classicnoise2d.html#.pnoise\">pnoise</a>","description":"<p>Classic Perlin Noise, periodic variant</p>"},{"title":"module:points/color","link":"<a href=\"module-points_color.html\">points/color</a>","description":"<p>A few color constants and wgsl methods to work with colors.\n<br>\n<br>\nThese are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/color.BLACK","link":"<a href=\"module-points_color.html#.BLACK\">BLACK</a>","description":"<p>BLACK color;</p>"},{"title":"module:points/color.BLUE","link":"<a href=\"module-points_color.html#.BLUE\">BLUE</a>","description":"<p>BLUE color;</p>"},{"title":"module:points/color.CYAN","link":"<a href=\"module-points_color.html#.CYAN\">CYAN</a>","description":"<p>CYAN color;</p>"},{"title":"module:points/color.GREEN","link":"<a href=\"module-points_color.html#.GREEN\">GREEN</a>","description":"<p>GREEN color;</p>"},{"title":"module:points/color.MAGENTA","link":"<a href=\"module-points_color.html#.MAGENTA\">MAGENTA</a>","description":"<p>MAGENTA color;</p>"},{"title":"module:points/color.RED","link":"<a href=\"module-points_color.html#.RED\">RED</a>","description":"<p>RED color;</p>"},{"title":"module:points/color.RGBAFromHSV","link":"<a href=\"module-points_color.html#.RGBAFromHSV\">RGBAFromHSV</a>","description":"<p>Creates a rgba <code>vec4f</code> from an hsv color value</p>"},{"title":"module:points/color.WHITE","link":"<a href=\"module-points_color.html#.WHITE\">WHITE</a>","description":"<p>WHITE color;</p>"},{"title":"module:points/color.YELLOW","link":"<a href=\"module-points_color.html#.YELLOW\">YELLOW</a>","description":"<p>YELLOW color;</p>"},{"title":"module:points/color.bloom","link":"<a href=\"module-points_color.html#.bloom\">bloom</a>","description":"<p>Compute the FFT (Fast Fourier Transform)</p>"},{"title":"module:points/color.brightness","link":"<a href=\"module-points_color.html#.brightness\">brightness</a>","description":"<p>Returns the perceived brightness of a color by the eye.<br>\n// Standard<br>\n<code>LuminanceA = (0.2126*R) + (0.7152*G) + (0.0722*B)</code></p>"},{"title":"module:points/color.brightnessB","link":"<a href=\"module-points_color.html#.brightnessB\">brightnessB</a>","description":"<p>Returns the perceived brightness of a color by the eye.<br>\n// Percieved A<br>\n<code>LuminanceB = (0.299*R + 0.587*G + 0.114*B)</code></p>"},{"title":"module:points/color.brightnessC","link":"<a href=\"module-points_color.html#.brightnessC\">brightnessC</a>","description":"<p>Returns the perceived brightness of a color by the eye.<br>\n// Percieved B<br>\nslower to calculate<br>\n<code>LuminanceC = sqrt(0.299*(R**2) + 0.587*(G**2) + 0.114*(B**2))</code></p>"},{"title":"module:points/color.layer","link":"<a href=\"module-points_color.html#.layer\">layer</a>","description":"<p>Layers two colors by cropping the color in the back,\nbased on the alpha value.</p>"},{"title":"module:points/debug","link":"<a href=\"module-points_debug.html\">points/debug</a>","description":"<p>Visual debugging methods like drawing a cross on screen and\ndrawing a square around the screen.\n<br>\n<br>\nThese are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/debug.showDebugCross","link":"<a href=\"module-points_debug.html#.showDebugCross\">showDebugCross</a>","description":"<p>Draws an infinite cross.\nUseful to draw it where the mouse is.</p>"},{"title":"module:points/debug.showDebugFrame","link":"<a href=\"module-points_debug.html#.showDebugFrame\">showDebugFrame</a>","description":"<p>Border around the screen</p>"},{"title":"module:points/effects","link":"<a href=\"module-points_effects.html\">points/effects</a>","description":"<p>These are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/effects.blur9","link":"<a href=\"module-points_effects.html#.blur9\">blur9</a>","description":"<p>Applies a blur to an image\n<br>\nbased on https://github.com/Jam3/glsl-fast-gaussian-blur/blob/master/9.glsl</p>"},{"title":"module:points/effects.clearAlpha","link":"<a href=\"module-points_effects.html#.clearAlpha\">clearAlpha</a>","description":"<p>Takes a color and reduces its value but applied to the alpha channel.</p>"},{"title":"module:points/effects.clearMix","link":"<a href=\"module-points_effects.html#.clearMix\">clearMix</a>","description":"<p>Takes a color and reduces its values by a <code>level</code></p>"},{"title":"module:points/effects.euclideanDistance","link":"<a href=\"module-points_effects.html#.euclideanDistance\">euclideanDistance</a>","description":"<p>Calculates the <a href=\"https://en.wikipedia.org/wiki/Euclidean_distance\">Euclidean Distance</a>\nbetween colors.</p>"},{"title":"module:points/effects.getClosestColorInPalette","link":"<a href=\"module-points_effects.html#.getClosestColorInPalette\">getClosestColorInPalette</a>","description":"<p>This assumes you have declared a palette in a variable or constant called\n<code>getClosestColorInPalette_palette</code>\n<br>\nGets the closest color based on the <code>distance</code> parameter.</p>"},{"title":"module:points/effects.getColorsAround4Texture","link":"<a href=\"module-points_effects.html#.getColorsAround4Texture\">getColorsAround4Texture</a>","description":"<p>From a given texture and its position, get top, botto, left and right color values</p>"},{"title":"module:points/effects.getColorsAroundTexture","link":"<a href=\"module-points_effects.html#.getColorsAroundTexture\">getColorsAroundTexture</a>","description":"<p>From a given texture and its position, get the 9 color values around.</p>"},{"title":"module:points/effects.orderedDithering","link":"<a href=\"module-points_effects.html#.orderedDithering\">orderedDithering</a>","description":"<p>Applies <a href=\"https://en.wikipedia.org/wiki/Ordered_dithering\">Ordered Dithering</a> to a color.\nBest with the colors of an image texture.\n<br>\nThis requires <code>orderedDithering_threshold_map</code> to be imported or\ncreate your own version of it.</p>"},{"title":"module:points/effects.orderedDithering_threshold_map","link":"<a href=\"module-points_effects.html#.orderedDithering_threshold_map\">orderedDithering_threshold_map</a>","description":"<p>To be used with <code>orderedDithering</code>.<br>\nYou can use this or create yours.</p>"},{"title":"module:points/effects.soften4","link":"<a href=\"module-points_effects.html#.soften4\">soften4</a>","description":"<p>Softens a color based on list of colors around it or any list of 4 colors.</p>"},{"title":"module:points/effects.soften8","link":"<a href=\"module-points_effects.html#.soften8\">soften8</a>","description":"<p>Softens a color based on list of colors around it or any list of 8 colors.</p>"},{"title":"module:points/image","link":"<a href=\"module-points_image.html\">points/image</a>","description":"<p>These are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/image.decodeNumberSprite","link":"<a href=\"module-points_image.html#.decodeNumberSprite\">decodeNumberSprite</a>","description":"<p>From a provided number, get the sprite in an atlas that matches the value.</p>"},{"title":"module:points/image.flipTextureUV","link":"<a href=\"module-points_image.html#.flipTextureUV\">flipTextureUV</a>","description":"<p>Flips texture in Y. This because it comes flipped, so this corrects it.</p>"},{"title":"module:points/image.pixelateTexture","link":"<a href=\"module-points_image.html#.pixelateTexture\">pixelateTexture</a>","description":"<p>Increase the aparent pixel size of the texture image using <code>textureSample</code>.\nThis reduces the quality of the image.</p>"},{"title":"module:points/image.pixelateTexturePosition","link":"<a href=\"module-points_image.html#.pixelateTexturePosition\">pixelateTexturePosition</a>","description":"<p>Increase the aparent pixel size of the texture image using <code>texturePosition</code>.\nThis reduces the quality of the image.</p>"},{"title":"module:points/image.sprite","link":"<a href=\"module-points_image.html#.sprite\">sprite</a>","description":"<p>Sprite or Atlas. Extract a piece of the sprite with an index.</p>"},{"title":"module:points/image.textureExternalPosition","link":"<a href=\"module-points_image.html#.textureExternalPosition\">textureExternalPosition</a>","description":"<p>Places texture_external in a position. Texture external being in this case\na video loaded as texture in the JS side.</p>"},{"title":"module:points/image.texturePosition","link":"<a href=\"module-points_image.html#.texturePosition\">texturePosition</a>","description":"<p>Places texture in a position. The texture being an image loaded from the JS side.</p>"},{"title":"module:points/math","link":"<a href=\"module-points_math.html\">points/math</a>","description":"<p>Math utils</p>\n<p>These are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/math.E","link":"<a href=\"module-points_math.html#.E\">E</a>","description":"<p>E is a mathematical constant approximately equal to 2.71828\nthat is the base of the natural logarithm and exponential function.\nIt is sometimes called Euler's number, after the Swiss mathematician Leonhard Euler.\n<a href=\"https://en.wikipedia.org/wiki/E_(mathematical_constant)\">E</a></p>"},{"title":"module:points/math.PHI","link":"<a href=\"module-points_math.html#.PHI\">PHI</a>","description":"<p>PHI is the Golden Ratio\n<a href=\"https://en.wikipedia.org/wiki/Golden_ratio\">PHI</a></p>"},{"title":"module:points/math.PI","link":"<a href=\"module-points_math.html#.PI\">PI</a>","description":"<p>PI is the ratio of a circle's circumference to its diameter.\n<a href=\"https://en.wikipedia.org/wiki/Pi\">PI</a></p>"},{"title":"module:points/math.TAU","link":"<a href=\"module-points_math.html#.TAU\">TAU</a>","description":"<p>TAU  is the ratio of a circle's circumference to its radius.\n<a href=\"https://en.wikipedia.org/wiki/Tau_(mathematics)\">TAU</a></p>"},{"title":"module:points/math.polar","link":"<a href=\"module-points_math.html#.polar\">polar</a>","description":"<p>Using polar coordinates, calculates the final point as <code>vec2f</code></p>"},{"title":"module:points/math.rotateVector","link":"<a href=\"module-points_math.html#.rotateVector\">rotateVector</a>","description":"<p>Rotates a vector an amount of radians</p>"},{"title":"module:points/noise2d","link":"<a href=\"module-points_noise2d.html\">points/noise2d</a>","description":"<p>original: Author : Ian McEwan, Ashima Arts.\nhttps://github.com/ashima/webgl-noise/blob/master/src/noise2D.glsl</p>\n<p>These are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/noise2d.snoise","link":"<a href=\"module-points_noise2d.html#.snoise\">snoise</a>","description":"<p>Sinplex Noise function</p>"},{"title":"module:points/random","link":"<a href=\"module-points_random.html\">points/random</a>","description":"<p>Various random functions.</p>\n<p>These are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/random.rand","link":"<a href=\"module-points_random.html#.rand\">rand</a>","description":"<p>Random number that returns a <code>vec2f</code>.<br>\nYou have to set the <code>rand_seed</code> before calling <code>rand()</code>.</p>"},{"title":"module:points/random.rand2","link":"<a href=\"module-points_random.html#.rand2\">rand2</a>","description":"<p>Random number from <code>vec2f</code> param</p>"},{"title":"module:points/random.random","link":"<a href=\"module-points_random.html#.random\">random</a>","description":"<p>Single random number.\nUse <code>seed</code> to change seed.</p>"},{"title":"module:points/sdf","link":"<a href=\"module-points_sdf.html\">points/sdf</a>","description":"<p>A few signed distance functions.\n<br>\n<br>\nThese are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/sdf.sdfCircle","link":"<a href=\"module-points_sdf.html#.sdfCircle\">sdfCircle</a>","description":"<p>Creates a circle</p>"},{"title":"module:points/sdf.sdfLine","link":"<a href=\"module-points_sdf.html#.sdfLine\">sdfLine</a>","description":"<p>Creates a line with a pixel stroke.</p>"},{"title":"module:points/sdf.sdfLine2","link":"<a href=\"module-points_sdf.html#.sdfLine2\">sdfLine2</a>","description":"<p>Better than sdfLine to create lines</p>"},{"title":"module:points/sdf.sdfSegment","link":"<a href=\"module-points_sdf.html#.sdfSegment\">sdfSegment</a>","description":"<p>Function used to create lines. It's a dependency of them.</p>"},{"title":"module:points/sdf.sdfSmooth","link":"<a href=\"module-points_sdf.html#.sdfSmooth\">sdfSmooth</a>","description":"<p>Special for letters and create an sdf version of a texture</p>"},{"title":"module:points/sdf.sdfSquare","link":"<a href=\"module-points_sdf.html#.sdfSquare\">sdfSquare</a>","description":"<p>Creates a square</p>"},{"title":"module:points/valuenoise","link":"<a href=\"module-points_valuenoise.html\">points/valuenoise</a>","description":"<p>Value noise methods.</p>\n<p>These are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/valuenoise.valueNoise","link":"<a href=\"module-points_valuenoise.html#.valueNoise\">valueNoise</a>","description":"<p>Implementation of a value noise function.<br>\n<a href=\"https://en.wikipedia.org/wiki/Value_noise\">value noise</a></p>"},{"title":"module:points/voronoi","link":"<a href=\"module-points_voronoi.html\">points/voronoi</a>","description":"<p>Voronoi functions.</p>\n<p>These are wgsl functions, not js functions.\nThe function is enclosed in a js string constant,\nto be appended into the code to reference it in the string shader.</p>"},{"title":"module:points/voronoi.voronoi","link":"<a href=\"module-points_voronoi.html#.voronoi\">voronoi</a>","description":"<p>Voronoi noise. Generated randomly.</p>"},{"title":"module:texture-string.loadImage","link":"<a href=\"module-texture-string.html#.loadImage\">loadImage</a>","description":"<p>Method to load image with await</p>"},{"title":"module:texture-string.strToImage","link":"<a href=\"module-texture-string.html#.strToImage\">strToImage</a>","description":"<p>Expects an atlas/spritesheed with chars in UTF-16 order.\nThis means <code>A</code> is expected at index <code>65</code>; if not there,\nuse offset to move backwards (negative) or forward (positive)</p>"},{"title":"module:texture-string~SignedNumber","link":"<a href=\"module-texture-string.html#~SignedNumber\">SignedNumber</a>","description":"<p>A numeric value that may be negative or positive.</p>"},{"title":"module:texture-string~sprite","link":"<a href=\"module-texture-string.html#~sprite\">sprite</a>"},{"title":"module:texture-string~strToCodes","link":"<a href=\"module-texture-string.html#~strToCodes\">strToCodes</a>","description":"<p>Returns UTF-16 array of each char</p>"},{"title":"renderPass.computeBindGroup","link":"<a href=\"renderPass_.html#.computeBindGroup\">computeBindGroup</a>"}]}