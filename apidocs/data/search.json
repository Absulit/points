{"list":[{"title":"CanvasRecorder","link":"<a href=\"CanvasRecorder.html\">CanvasRecorder</a>"},{"title":"CanvasRecorder","link":"<a href=\"CanvasRecorder.html\">CanvasRecorder</a>","description":"Records video from a Canvas to a file."},{"title":"CanvasRecorder#getPNG","link":"<a href=\"CanvasRecorder.html#getPNG\">getPNG</a>","description":"Retrieves the current frame as a PNG and downloads the image."},{"title":"CanvasRecorder#start","link":"<a href=\"CanvasRecorder.html#start\">start</a>","description":"Starts the video recording."},{"title":"CanvasRecorder#stop","link":"<a href=\"CanvasRecorder.html#stop\">stop</a>","description":"Stops the video recording and downloads the video."},{"title":"Clock#delta","link":"<a href=\"Clock.html#delta\">delta</a>","description":"Gets the last delta value, it does not calculate the delta, use `getDelta()`"},{"title":"Clock#getDelta","link":"<a href=\"Clock.html#getDelta\">getDelta</a>","description":"Calculate time since last frame\rIt also calculates `time`"},{"title":"Clock#time","link":"<a href=\"Clock.html#time\">time</a>","description":"Gets the current time, it does not calculate the time, it's calcualted\r when `getDelta()` is called."},{"title":"LayersArray#shaderType","link":"<a href=\"LayersArray.html#shaderType\">shaderType</a>"},{"title":"Points","link":"<a href=\"Points.html\">Points</a>","description":"Main class Points"},{"title":"Points#addAudio","link":"<a href=\"Points.html#addAudio\">addAudio</a>"},{"title":"Points#addBindingTexture","link":"<a href=\"Points.html#addBindingTexture\">addBindingTexture</a>"},{"title":"Points#addEventListener","link":"<a href=\"Points.html#addEventListener\">addEventListener</a>","description":"Listen for an event dispatched from WGSL code"},{"title":"Points#addLayers","link":"<a href=\"Points.html#addLayers\">addLayers</a>"},{"title":"Points#addPoint","link":"<a href=\"Points.html#addPoint\">addPoint</a>","description":"Adds two triangles as a quad called Point"},{"title":"Points#addRenderPass","link":"<a href=\"Points.html#addRenderPass\">addRenderPass</a>","description":"Mainly to be used with RenderPasses.js"},{"title":"Points#addSampler","link":"<a href=\"Points.html#addSampler\">addSampler</a>"},{"title":"Points#addStorage","link":"<a href=\"Points.html#addStorage\">addStorage</a>"},{"title":"Points#addStorageMap","link":"<a href=\"Points.html#addStorageMap\">addStorageMap</a>"},{"title":"Points#addTexture2d","link":"<a href=\"Points.html#addTexture2d\">addTexture2d</a>"},{"title":"Points#addTextureImage","link":"<a href=\"Points.html#addTextureImage\">addTextureImage</a>"},{"title":"Points#addTextureVideo","link":"<a href=\"Points.html#addTextureVideo\">addTextureVideo</a>"},{"title":"Points#addTextureWebcam","link":"<a href=\"Points.html#addTextureWebcam\">addTextureWebcam</a>"},{"title":"Points#addUniform","link":"<a href=\"Points.html#addUniform\">addUniform</a>"},{"title":"Points#createScreen","link":"<a href=\"Points.html#createScreen\">createScreen</a>","description":"Adds two triangles called points per number of columns and rows"},{"title":"Points#init","link":"<a href=\"Points.html#init\">init</a>","description":"One time function to call to initialize the shaders."},{"title":"Points#setAudio","link":"<a href=\"Points.html#setAudio\">setAudio</a>","description":"Assigns an audio FrequencyData to a StorageMap"},{"title":"Points#setBindingTexture","link":"<a href=\"Points.html#setBindingTexture\">setBindingTexture</a>","description":"Sets a texture to the compute and fragment shader, in the compute you can\rwrite to the texture, and in the fragment you can read the texture, so is\ra one way communication method."},{"title":"Points#setLayers","link":"<a href=\"Points.html#setLayers\">setLayers</a>","description":"Layers of data made of `vec4f`"},{"title":"Points#setMeshDensity","link":"<a href=\"Points.html#setMeshDensity\">setMeshDensity</a>","description":"Establishes the density of the base mesh, by default 1x1, meaning two triangles.\rThe final number of triangles is `numColumns` * `numRows` * `2` ( 2 being the triangles )"},{"title":"Points#setSampler","link":"<a href=\"Points.html#setSampler\">setSampler</a>","description":"Creates a `sampler` to be sent to the shaders."},{"title":"Points#setStorage","link":"<a href=\"Points.html#setStorage\">setStorage</a>","description":"Creates a persistent memory buffer across every frame call."},{"title":"Points#setStorageMap","link":"<a href=\"Points.html#setStorageMap\">setStorageMap</a>","description":"Creates a persistent memory buffer across every frame call that can be updated."},{"title":"Points#setTexture2d","link":"<a href=\"Points.html#setTexture2d\">setTexture2d</a>","description":"Create a `texture_2d` in the shaders."},{"title":"Points#setTextureImage","link":"<a href=\"Points.html#setTextureImage\">setTextureImage</a>","description":"Load an image as texture_2d"},{"title":"Points#setTextureImageArray","link":"<a href=\"Points.html#setTextureImageArray\">setTextureImageArray</a>","description":"Load images as texture_2d_array"},{"title":"Points#setTextureString","link":"<a href=\"Points.html#setTextureString\">setTextureString</a>","description":"Loads a text string as a texture.\rUsing an Atlas or a Spritesheet with UTF-16 chars (`path`) it will create a new texture\rthat contains only the `text` characters.\rCharacters in the atlas `path` must be in order of the UTF-16 chars.\rIt can have missing characters at the end or at the start, so the `offset` is added to take account for those chars.\rFor example, `A` is 65, but if one character is removed before the letter `A`, then offset is -1"},{"title":"Points#setTextureVideo","link":"<a href=\"Points.html#setTextureVideo\">setTextureVideo</a>","description":"Load an video as texture2d"},{"title":"Points#setTextureWebcam","link":"<a href=\"Points.html#setTextureWebcam\">setTextureWebcam</a>","description":"Load webcam as texture2d"},{"title":"Points#setUniform","link":"<a href=\"Points.html#setUniform\">setUniform</a>","description":"Set a param as uniform to send to all shaders.\rA Uniform is a value that can only be changed\rfrom the outside, and unless changed it remains\rconsistent."},{"title":"Points#updateStorageMap","link":"<a href=\"Points.html#updateStorageMap\">updateStorageMap</a>"},{"title":"Points#updateTextureImage","link":"<a href=\"Points.html#updateTextureImage\">updateTextureImage</a>"},{"title":"Points#updateUniform","link":"<a href=\"Points.html#updateUniform\">updateUniform</a>"},{"title":"Points#updateUniforms","link":"<a href=\"Points.html#updateUniforms\">updateUniforms</a>","description":"Update a list of uniforms"},{"title":"RGBAColor#euclideanDistance","link":"<a href=\"RGBAColor.html#euclideanDistance\">euclideanDistance</a>","description":"Checks how close two colors are. Closest is `0`."},{"title":"RenderPass","link":"<a href=\"RenderPass.html\">RenderPass</a>","description":"A collection of Vertex, Compute and Fragment shaders that represent a RenderPass.\rThis is useful for PostProcessing."},{"title":"RenderPasses","link":"<a href=\"RenderPasses.html\">RenderPasses</a>"},{"title":"RenderPasses.add","link":"<a href=\"RenderPasses.html#.add\">add</a>","description":"Add a `RenderPass` from the `RenderPasses` list"},{"title":"RenderPasses.bloom","link":"<a href=\"RenderPasses.html#.bloom\">bloom</a>","description":"Bloom postprocessing. Increases brightness of already bright areas to create a haze effect."},{"title":"RenderPasses.blur","link":"<a href=\"RenderPasses.html#.blur\">blur</a>","description":"Blur postprocessing. Softens an image by creating multiple samples."},{"title":"RenderPasses.chromaticAberration","link":"<a href=\"RenderPasses.html#.chromaticAberration\">chromaticAberration</a>","description":"Chromatic Aberration postprocessing. Color bleeds simulating a lens effect without distortion."},{"title":"RenderPasses.color","link":"<a href=\"RenderPasses.html#.color\">color</a>","description":"Color postprocessing"},{"title":"RenderPasses.filmgrain","link":"<a href=\"RenderPasses.html#.filmgrain\">filmgrain</a>","description":"Film grain postprocessing. White noise added to the output to simulate film irregularities."},{"title":"RenderPasses.grayscale","link":"<a href=\"RenderPasses.html#.grayscale\">grayscale</a>","description":"Grayscale postprocessing. Takes the brightness of an image and returns it; that makes the grayscale result."},{"title":"RenderPasses.lensDistortion","link":"<a href=\"RenderPasses.html#.lensDistortion\">lensDistortion</a>","description":"Lens Distortion postprocessing. A fisheye distortion with chromatic aberration."},{"title":"RenderPasses.pixelate","link":"<a href=\"RenderPasses.html#.pixelate\">pixelate</a>","description":"Pixelate postprocessing. It reduces the amount of pixels in the output preserving the scale."},{"title":"RenderPasses.waves","link":"<a href=\"RenderPasses.html#.waves\">waves</a>","description":"Waves postprocessing. Distorts the image with noise to create a water like effect."},{"title":"ShaderType","link":"<a href=\"ShaderType.html\">ShaderType</a>"},{"title":"UniformKeys#DELTA","link":"<a href=\"UniformKeys.html#DELTA\">DELTA</a>","description":"To set the time after the last frame"},{"title":"UniformKeys#EPOCH","link":"<a href=\"UniformKeys.html#EPOCH\">EPOCH</a>","description":"To set the current date and time in seconds"},{"title":"UniformKeys#MOUSE","link":"<a href=\"UniformKeys.html#MOUSE\">MOUSE</a>","description":"To set mouse coordinates"},{"title":"UniformKeys#MOUSE_CLICK","link":"<a href=\"UniformKeys.html#MOUSE_CLICK\">MOUSE_CLICK</a>","description":"To set if the mouse has been clicked."},{"title":"UniformKeys#MOUSE_DELTA","link":"<a href=\"UniformKeys.html#MOUSE_DELTA\">MOUSE_DELTA</a>","description":"To set how much the wheel has moved."},{"title":"UniformKeys#MOUSE_DOWN","link":"<a href=\"UniformKeys.html#MOUSE_DOWN\">MOUSE_DOWN</a>","description":"To set if the mouse is down."},{"title":"UniformKeys#MOUSE_WHEEL","link":"<a href=\"UniformKeys.html#MOUSE_WHEEL\">MOUSE_WHEEL</a>","description":"To set if the wheel is moving."},{"title":"UniformKeys#SCREEN","link":"<a href=\"UniformKeys.html#SCREEN\">SCREEN</a>","description":"To set screen dimensions"},{"title":"UniformKeys#TIME","link":"<a href=\"UniformKeys.html#TIME\">TIME</a>","description":"To set the time in milliseconds"},{"title":"UniformsArray#buffer","link":"<a href=\"UniformsArray.html#buffer\">buffer</a>","description":"set buffer"},{"title":"VertexBufferInfo","link":"<a href=\"VertexBufferInfo.html\">VertexBufferInfo</a>","description":"Along with the vertexArray it calculates some info like offsets required for the pipeline."},{"title":"module:data-size.isArray","link":"<a href=\"module-data-size.html#.isArray\">isArray</a>","description":"Check if string has 'array' in it"},{"title":"module:defaultFunctions","link":"<a href=\"module-defaultFunctions.html\">defaultFunctions</a>","description":"The defaultVertexBody is used as a drop-in replacement of the vertex shader content.\r<br>\rThis is not required, but useful if you plan to use the default parameters of the library.\r<br>\r<br>\rThese are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:defaultFunctions.defaultVertexBody","link":"<a href=\"module-defaultFunctions.html#.defaultVertexBody\">defaultVertexBody</a>","description":"Default function for the Vertex shader that takes charge of automating the\rcreation of a few variables that are commonly used."},{"title":"module:defaultVertexStructs~defaultVertexStructs","link":"<a href=\"module-defaultVertexStructs.html#~defaultVertexStructs\">defaultVertexStructs</a>","description":"Unused structs for the future."},{"title":"module:points/animation","link":"<a href=\"module-points_animation.html\">points/animation</a>","description":"Utilities for animation.\r<br>\r<br>\rThese are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/animation.fnusin","link":"<a href=\"module-points_animation.html#.fnusin\">fnusin</a>","description":"Animates `sin()` over `params.time` and a provided `speed`.\rThe value is normalized, so in the range 0..1"},{"title":"module:points/animation.fucos","link":"<a href=\"module-points_animation.html#.fucos\">fucos</a>","description":"Animates `cos()` over `params.time` and a provided `speed`.\rThe value is not normalized, so in the range -1..1"},{"title":"module:points/animation.fusin","link":"<a href=\"module-points_animation.html#.fusin\">fusin</a>","description":"Animates `sin()` over `params.time` and a provided `speed`.\rThe value is not normalized, so in the range -1..1"},{"title":"module:points/audio","link":"<a href=\"module-points_audio.html\">points/audio</a>","description":"Utilities for audio work.\r<br>\r<br>\rThese are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/cellular2d","link":"<a href=\"module-points_cellular2d.html\">points/cellular2d</a>","description":"original: Author :  Stefan Gustavson (stefan.gustavson@liu.se)\rhttps://github.com/ashima/webgl-noise/blob/master/src/cellular2D.glsl\r\rThese are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/cellular2d.cellular","link":"<a href=\"module-points_cellular2d.html#.cellular\">cellular</a>","description":"Cellular noise"},{"title":"module:points/classicnoise2d","link":"<a href=\"module-points_classicnoise2d.html\">points/classicnoise2d</a>","description":"original: Author :  Stefan Gustavson (stefan.gustavson@liu.se)\rhttps://github.com/ashima/webgl-noise/blob/master/src/classicnoise2D.glsl\r\rThese are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/classicnoise2d.cnoise","link":"<a href=\"module-points_classicnoise2d.html#.cnoise\">cnoise</a>","description":"Classic Perlin Noise"},{"title":"module:points/classicnoise2d.pnoise","link":"<a href=\"module-points_classicnoise2d.html#.pnoise\">pnoise</a>","description":"Classic Perlin Noise, periodic variant"},{"title":"module:points/color","link":"<a href=\"module-points_color.html\">points/color</a>","description":"These are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/color.RGBAFromHSV","link":"<a href=\"module-points_color.html#.RGBAFromHSV\">RGBAFromHSV</a>","description":"Creates a rgba `vec4f` from an hsv color value"},{"title":"module:points/color.bloom","link":"<a href=\"module-points_color.html#.bloom\">bloom</a>","description":"Compute the FFT (Fast Fourier Transform)"},{"title":"module:points/color.brightness","link":"<a href=\"module-points_color.html#.brightness\">brightness</a>","description":"Returns the perceived brightness of a color by the eye\r# Standard\rLuminanceA = (0.2126*R) + (0.7152*G) + (0.0722*B)"},{"title":"module:points/color.brightnessB","link":"<a href=\"module-points_color.html#.brightnessB\">brightnessB</a>","description":"Returns the perceived brightness of a color by the eye\r# Percieved A\rLuminanceB = (0.299*R + 0.587*G + 0.114*B)"},{"title":"module:points/color.brightnessC","link":"<a href=\"module-points_color.html#.brightnessC\">brightnessC</a>","description":"Returns the perceived brightness of a color by the eye\r# Percieved B\rslower to calculate\r\rLuminanceC = sqrt(0.299*(R**2) + 0.587*(G**2) + 0.114*(B**2))"},{"title":"module:points/color.layer","link":"<a href=\"module-points_color.html#.layer\">layer</a>","description":"Layers two colors by cropping the color in the back"},{"title":"module:points/debug","link":"<a href=\"module-points_debug.html\">points/debug</a>","description":"These are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/debug.showDebugCross","link":"<a href=\"module-points_debug.html#.showDebugCross\">showDebugCross</a>","description":"Draws an infinite cross.\rUseful to draw it where the mouse is."},{"title":"module:points/debug.showDebugFrame","link":"<a href=\"module-points_debug.html#.showDebugFrame\">showDebugFrame</a>","description":"Border around the screen"},{"title":"module:points/effects","link":"<a href=\"module-points_effects.html\">points/effects</a>","description":"These are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/effects.getClosestColorInPalette","link":"<a href=\"module-points_effects.html#.getClosestColorInPalette\">getClosestColorInPalette</a>","description":"From a palette declared in `getClosestColorInPalette_palette`\rgets the closest color based on `distance`"},{"title":"module:points/image","link":"<a href=\"module-points_image.html\">points/image</a>","description":"These are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/image.decodeNumberSprite","link":"<a href=\"module-points_image.html#.decodeNumberSprite\">decodeNumberSprite</a>"},{"title":"module:points/image.flipTextureUV","link":"<a href=\"module-points_image.html#.flipTextureUV\">flipTextureUV</a>","description":"Flips texture in Y. This because it comes flipped, so this corrects it."},{"title":"module:points/image.pixelateTexture","link":"<a href=\"module-points_image.html#.pixelateTexture\">pixelateTexture</a>","description":"Increase the aparent pixel size of the texture image using `textureSample`"},{"title":"module:points/image.pixelateTexturePosition","link":"<a href=\"module-points_image.html#.pixelateTexturePosition\">pixelateTexturePosition</a>","description":"Increase the aparent pixel size of the texture image using `texturePosition`"},{"title":"module:points/image.sprite","link":"<a href=\"module-points_image.html#.sprite\">sprite</a>","description":"Sprite or Atlas. Extract a piece of the sprite with an index."},{"title":"module:points/image.textureExternalPosition","link":"<a href=\"module-points_image.html#.textureExternalPosition\">textureExternalPosition</a>","description":"places texture_external in a position"},{"title":"module:points/image.texturePosition","link":"<a href=\"module-points_image.html#.texturePosition\">texturePosition</a>","description":"places texture in a position"},{"title":"module:points/math","link":"<a href=\"module-points_math.html\">points/math</a>","description":"Math utils\r\rThese are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/math.polar","link":"<a href=\"module-points_math.html#.polar\">polar</a>","description":"Using polar coordinates, calculates the final point as `vec2<f32>`"},{"title":"module:points/math.rotateVector","link":"<a href=\"module-points_math.html#.rotateVector\">rotateVector</a>","description":"Rotates a vector an amount of radians"},{"title":"module:points/noise2d","link":"<a href=\"module-points_noise2d.html\">points/noise2d</a>","description":"original: Author : Ian McEwan, Ashima Arts.\rhttps://github.com/ashima/webgl-noise/blob/master/src/noise2D.glsl\r\rThese are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/noise2d.snoise","link":"<a href=\"module-points_noise2d.html#.snoise\">snoise</a>","description":"Noise"},{"title":"module:points/random","link":"<a href=\"module-points_random.html\">points/random</a>","description":"These are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/random.rand","link":"<a href=\"module-points_random.html#.rand\">rand</a>","description":"Random number that returns a `vec2f`.\rUse `rand_seed:vec2f` to change seed."},{"title":"module:points/random.rand2","link":"<a href=\"module-points_random.html#.rand2\">rand2</a>","description":"Random number from `vec2f` param"},{"title":"module:points/random.random","link":"<a href=\"module-points_random.html#.random\">random</a>","description":"Single random number.\rUse `seed` to change seed."},{"title":"module:points/sdf","link":"<a href=\"module-points_sdf.html\">points/sdf</a>","description":"A few signed distance functions.\rThese are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/sdf.sdfCircle","link":"<a href=\"module-points_sdf.html#.sdfCircle\">sdfCircle</a>","description":"Creates a circle"},{"title":"module:points/sdf.sdfLine","link":"<a href=\"module-points_sdf.html#.sdfLine\">sdfLine</a>","description":"Creates a line with a pixel stroke."},{"title":"module:points/sdf.sdfLine2","link":"<a href=\"module-points_sdf.html#.sdfLine2\">sdfLine2</a>","description":"Better than sdfLine to create lines"},{"title":"module:points/sdf.sdfSegment","link":"<a href=\"module-points_sdf.html#.sdfSegment\">sdfSegment</a>","description":"Function used to create lines. It's a dependency of them."},{"title":"module:points/sdf.sdfSmooth","link":"<a href=\"module-points_sdf.html#.sdfSmooth\">sdfSmooth</a>","description":"Special for letters and create an sdf version of a texture"},{"title":"module:points/sdf.sdfSquare","link":"<a href=\"module-points_sdf.html#.sdfSquare\">sdfSquare</a>","description":"Creates a square"},{"title":"module:points/valuenoise","link":"<a href=\"module-points_valuenoise.html\">points/valuenoise</a>","description":"These are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/voronoi","link":"<a href=\"module-points_voronoi.html\">points/voronoi</a>","description":"These are wgsl functions, not js functions.\rThe function is enclosed in a js string constant,\rto be appended into the code to reference it in the string shader."},{"title":"module:points/voronoi.voronoi","link":"<a href=\"module-points_voronoi.html#.voronoi\">voronoi</a>","description":"Voronoi noise"},{"title":"module:texture-string.loadImage","link":"<a href=\"module-texture-string.html#.loadImage\">loadImage</a>","description":"Method to load image with await"},{"title":"module:texture-string.strToImage","link":"<a href=\"module-texture-string.html#.strToImage\">strToImage</a>","description":"Expects an atlas/spritesheed with chars in UTF-16 order.\nThis means `A` is expected at index `65`; if not there,\nuse offset to move backwards (negative) or forward (positive)"},{"title":"module:texture-string~SignedNumber","link":"<a href=\"module-texture-string.html#~SignedNumber\">SignedNumber</a>","description":"A numeric value that may be negative or positive."},{"title":"module:texture-string~sprite","link":"<a href=\"module-texture-string.html#~sprite\">sprite</a>"},{"title":"module:texture-string~strToCodes","link":"<a href=\"module-texture-string.html#~strToCodes\">strToCodes</a>","description":"Returns UTF-16 array of each char"},{"title":"renderPass.computeBindGroup","link":"<a href=\"renderPass_.html#.computeBindGroup\">computeBindGroup</a>"}]}